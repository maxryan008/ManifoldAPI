plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

group = project.maven_group
version = project.mod_version
base.archivesName = project.archives_base_name

repositories {
	mavenCentral()
	maven { url = 'https://maven.fabricmc.net/' }
}

loom {
	splitEnvironmentSourceSets()

	mods {
		manifold {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

sourceSets {
	main {
		java.srcDirs = ['src/main/java', 'src/api/java']
		resources.srcDirs = ['src/main/resources']
	}
	client {
		java.srcDirs = ['src/client/java']
		resources.srcDirs = ['src/client/resources']
		compileClasspath += main.output
		runtimeClasspath += main.output
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
}

processResources {
	inputs.property "version", project.version
	filesMatching("fabric.mod.json") {
		expand version: project.version
	}
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/maxryan008/ManifoldAPI") //todo make this a modrinth maven instead for other mods to utilise
			credentials {
				username = project.findProperty("gpr.user") ?: ""
				password = project.findProperty("gpr.key") ?: ""
			}
		}
	}
}